# A dummy plugin for Barge to set hostname and network correctly at the very first `vagrant up`
module VagrantPlugins
  module GuestLinux
    class Plugin < Vagrant.plugin("2")
      guest_capability("linux", "change_host_name") { Cap::ChangeHostName }
      guest_capability("linux", "configure_networks") { Cap::ConfigureNetworks }
    end
  end
end

Vagrant.configure(2) do |config|
  config.vm.define "barge-test"

  config.vm.box = "barge"

  config.vm.hostname = "barge-test.example.com"

  # config.vm.network :private_network, ip: "192.168.33.10"

  # config.vm.synced_folder ".", "/vagrant"
  # config.vm.synced_folder ".", "/vagrant", type: "nfs",
  #   mount_options: ["nolock", "vers=3", "noatime", "actimeo=1"]

  config.vm.provider :veertu do |v|
    v.name = "barge-test"
    v.gui = true
  end

  if Vagrant.has_plugin?("vagrant-triggers")
    PWD=`pwd`.strip
    UID=`id -u`.strip
    GID=`id -g`.strip
    NET_ADDR="192.168.64.0"
    NET_MASK="255.255.255.0"
    EXPORTS="\"#{PWD}\" -network #{NET_ADDR} -mask #{NET_MASK} -alldirs -mapall=#{UID}:#{GID}"

    config.trigger.before [:up, :resume] do
      info "Add an entry into /etc/exports"
      run "sudo sh -c 'echo #{EXPORTS.dump.dump} >> /etc/exports'"
      run "sudo nfsd restart"
      run "sudo sh -c '/usr/libexec/bootpd || true'"
    end

    config.vm.provision :shell, run: "always" do |sh|
      sh.inline = <<-EOT
        if ! mountpoint -q '#{PWD}'; then
          mkdir -p '#{PWD}'
          mount -o nolock,vers=3,noatime,actimeo=1 '192.168.64.1:#{PWD}' '#{PWD}'
        fi
      EOT
    end

    config.trigger.after [:destroy, :suspend, :halt] do
      info "Remove the entry from /etc/exports"
      run "sudo touch /etc/exports"
      run "sudo sed -E -e '\\\\|^#{EXPORTS}$|d' -i.bak /etc/exports"
      run "sudo nfsd restart"
    end
  end

  config.vm.provision :docker do |docker|
    docker.pull_images "busybox"
    docker.run "simple-echo",
      image: "busybox",
      args: "-p 8080:8080 -v /usr/bin/dumb-init:/dumb-init:ro --entrypoint=/dumb-init",
      cmd: "nc -p 8080 -l -l -e echo hello world!"
  end

  config.vm.network :forwarded_port, guest: 8080, host: 8080
end
